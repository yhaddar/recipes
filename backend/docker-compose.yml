services:
  config-server:
    build: ./config-server
    container_name: config-server
    volumes:
      - ./config-server:/app
      - /app/target
      - maven-cache:/root/.m2
      - ./config-server/target/classes:/app/target/classes
    command: [ "./mvnw", "spring-boot:run" ]
    working_dir: /app
    ports:
      - "8888:8888"
    stdin_open: true
    tty: true
  api-gateway:
    build: ./gatway
    container_name: api-gateway
    volumes:
      - ./gatway:/app
      - /app/target
      - maven-cache:/root/.m2
      - ./gatway/target/classes:/app/target/classes
    command: [ "./mvnw", "spring-boot:run" ]
    working_dir: /app
    ports:
      - "8080:8080"
    depends_on:
      - eureka-discovery
    stdin_open: true
    tty: true
  eureka-discovery:
    build: ./discovery
    container_name: eureka-discovery
    ports:
      - "8871:8871"
    command: [ "./mvnw", "spring-boot:run"]
  redis-caching:
    image: redis:latest
    container_name: redis-caching
    ports:
      - "6379:6379"
  recipe-service:
    build: ./recipe
    container_name: recipe-service
    depends_on:
      - psql
      - authentication-service
      - eureka-discovery
      - zipkin
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://psql:5432/recipes
      SPRING_DATASOURCE_USERNAME: yhaddar
      SPRING_DATASOURCE_PASSWORD: 3705
      SPRING_DEVTOOLS_RESTART_ENABLED: true
      SPRING_DEVTOOLS_LIVERELOAD_ENABLED: true
      SPRING_REDIS_HOST: redis-caching
      SPRING_REDIS_PORT: 6379
    volumes:
      - ./recipe:/app
      - /app/target
      - maven-cache:/root/.m2
      - ./recipe/target/classes:/app/target/classes
    command: ["./mvnw", "spring-boot:run"]
    working_dir: /app
    ports:
      - "8081:8081"
    stdin_open: true
    tty: true
  blogs-service:
    build: ./blogs
    container_name: blogs-service
    depends_on:
      - psql
      - authentication-service
      - eureka-discovery
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://psql:5432/blogs
      SPRING_DATASOURCE_USERNAME: yhaddar
      SPRING_DATASOURCE_PASSWORD: 3705
      SPRING_DEVTOOLS_RESTART_ENABLED: true
      SPRING_DEVTOOLS_LIVERELOAD_ENABLED: true
    volumes:
      - ./blogs:/app
      - /app/target
      - maven-cache:/root/.m2
      - ./blogs/target/classes:/app/target/classes
    command: [ "./mvnw", "spring-boot:run" ]
    working_dir: /app
    ports:
      - "8082:8082"
    stdin_open: true
    tty: true
  authentication-service:
    build: ./authentication
    container_name: authentication-service
    depends_on:
      - psql
      - eureka-discovery
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://psql:5432/users
      SPRING_DATASOURCE_USERNAME: yhaddar
      SPRING_DATASOURCE_PASSWORD: 3705
      SPRING_DEVTOOLS_RESTART_ENABLED: true
      SPRING_DEVTOOLS_LIVERELOAD_ENABLED: true
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
    volumes:
      - ./authentication:/app
      - /app/target
      - maven-cache:/root/.m2
      - ./authentication/target/classes:/app/target/classes
    command: ["./mvnw", "spring-boot:run"]
    working_dir: /app
    ports:
      - "8085:8085"
  psql:
    image: postgres:latest
    container_name: psql
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: yhaddar
      POSTGRES_PASSWORD: 3705
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - zipkin

volumes:
  pgdata:
  db:
  maven-cache:
networks:
  zipkin:
      driver: bridge